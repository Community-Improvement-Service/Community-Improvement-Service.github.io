{"version":3,"sources":["webpack://community-improvement-service/./src/components/Image.js","webpack://community-improvement-service/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://community-improvement-service/./src/pages/about-us/committee-members.js"],"names":["src","rest","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","data","useStaticQuery","match","useMemo","images","edges","find","node","relativePath","childImageSharp","publicURL","extension","G","image","gatsbyImageData","alt","page","title","className","JSONData","name","Image","position"],"mappings":"+NA2CA,EAtCc,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,IAAQC,ECLV,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDP2B,MAC5BM,GAAOC,oBAAe,cAgBtBC,GAAQC,cACZ,kBAAMH,EAAKI,OAAOC,MAAMC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcnB,IAAQmB,EAAKC,kBACxD,CAACR,EAAMZ,IAGT,IAAKc,EAAO,OAAO,KAEnB,MAAiEA,EAAzDK,KAAQE,GAAhB,aAA0D,GAA1D,GAAgBA,gBAAiBC,EAAjC,EAAiCA,UAEjC,MAAkB,QAFlB,EAA4CC,WAEhBF,EAIrB,gBAAC,EAAAG,EAAD,eAAaC,MAAOJ,EAAgBK,iBAAqBzB,IAHvD,qCAAKD,IAAKsB,GAAerB,EAAzB,CAA+B0B,IAAKL,O,ywBEM/C,EA9B0B,kBACtB,gBAAC,IAAD,CAAQM,KAAK,qBACX,gBAAC,IAAD,CAAKC,MAAM,sBACX,uBAAKC,UAAU,QACb,2BAASA,UAAU,aACjB,0BAAQA,UAAU,2BAAlB,sBAEF,2BAASA,UAAU,WACjB,uBAAKA,UAAU,yCACZC,SAAoB,SAACnB,GACpB,OAAIA,EAAKoB,KACC,uBAAKF,UAAU,0BACrB,uBAAKA,UAAU,UACb,gBAACG,EAAA,EAAD,CAAOjC,IAAKY,EAAKa,MAAOE,IAAKf,EAAKoB,KAAMF,UAAU,aAEpD,uBAAKA,UAAU,UACb,uBAAKA,UAAU,aAAalB,EAAKoB,MACjC,uBAAKF,UAAU,iBAAiBlB,EAAKsB,YAIlC,uBAAKJ,UAAU","file":"component---src-pages-about-us-committee-members-js-649033d694362c7e32e8.js","sourcesContent":["import React, { useMemo } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport PropTypes from \"prop-types\";\n\nconst Image = ({ src, ...rest }) => {\n  const data = useStaticQuery(graphql`{\n  images: allFile(filter: {internal: {mediaType: {regex: \"/image/\"}}}) {\n    edges {\n      node {\n        relativePath\n        extension\n        publicURL\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED, formats: [AUTO, WEBP, AVIF])\n        }\n      }\n    }\n  }\n}\n`);\n\n  const match = useMemo(\n    () => data.images.edges.find(({ node }) => src === node.relativePath),\n    [data, src]\n  );\n\n  if (!match) return null;\n\n  const { node: { childImageSharp, publicURL, extension } = {} } = match;\n\n  if (extension === \"svg\" || !childImageSharp) {\n    return <img src={publicURL} {...rest} alt={publicURL} />;\n  }\n\n  return <GatsbyImage image={childImageSharp.gatsbyImageData} {...rest} />;\n};\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n};\n\nexport default Image;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import * as React from \"react\"\r\n\r\nimport Layout from \"../../components/layout\"\r\nimport Seo from \"../../components/seo\"\r\nimport Image from \"../../components/Image\"\r\nimport '../../pages/about-us/committee_members.css'\r\nimport JSONData from \"../../data/committee-member-list.json\"\r\n\r\nconst committee_members = () => (\r\n    <Layout page=\"committee_members\">\r\n      <Seo title=\"Committee Members\" />\r\n      <div className=\"main\">\r\n        <section className=\"title-div\">\r\n          <strong className=\"title-committee-members\">Committee Members</strong>\r\n        </section>\r\n        <section className=\"section\">\r\n          <div className=\"columns is-multiline sectionContainer\">\r\n            {JSONData.member.map((data) => {\r\n              if (data.name) {\r\n                return (<div className=\"column is-half columns\">\r\n                  <div className=\"column\">\r\n                    <Image src={data.image} alt={data.name} className=\"picture\" />\r\n                  </div>\r\n                  <div className=\"column\">\r\n                    <div className=\"innerName\">{data.name}</div>\r\n                    <div className=\"innerPosition\">{data.position}</div>\r\n                  </div>\r\n                </div>)\r\n              } else {\r\n                return <div className=\"column is-half\" />\r\n              }\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </Layout>\r\n)\r\n\r\nexport default committee_members\r\n"],"sourceRoot":""}